apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-configmap
data:
  dcache-k8s-door: |-
    dcache.broker.scheme = core

    chimerashell.db.host = ${chimera.db.host}
    chimerashell.db.user = ${chimera.db.user}
    chimerashell.db.password = ${chimera.db.password}
    chimerashell.db.name = ${chimera.db.name}

    dcache.java.options.extra=-Dorg.dcache.net.localaddresses={{ $.Release.Name }}-door-svc

    [{{ $.Release.Name }}-door-svc]
    [{{ $.Release.Name }}-door-svc/poolmanager]

    [{{ $.Release.Name }}-door-svc/pnfsmanager]
    chimera.db.url=jdbc:postgresql://${chimera.db.host}/${chimera.db.name}?ApplicationName=${pnfsmanager.cell.name}

    [{{ $.Release.Name }}-door-svc/cleaner-disk]
    chimera.db.url=jdbc:postgresql://${chimera.db.host}/${chimera.db.name}?ApplicationName=${cleaner-disk.cell.name}

    [{{ $.Release.Name }}-door-svc/nfs]
    chimera.db.url=jdbc:postgresql://${chimera.db.host}/${chimera.db.name}?ApplicationName=${cleaner-disk.cell.name}
    nfs.version=4.1
    nfs.domain=dcache.org
    nfs.enable.portmap=false
    nfs.namespace-cache.size=8192
    nfs.export.file=/opt/dcache/etc/exports

    [{{ $.Release.Name }}-door-svc/gplazma]

    [{{ $.Release.Name }}-door-svc/xrootd]
    xrootd.security.tls.mode=OFF
    xrootd.authz.write-paths = /
    xrootd.authz.anonymous-operations = FULL

    [{{ $.Release.Name }}-door-svc/httpd]

    [{{ $.Release.Name }}-door-svc/webdav]
    webdav.cell.name=webdav-plain
    webdav.net.port=8080
    webdav.authz.anonymous-operations=FULL
    webdav.redirect.on-write=false
    webdav.redirect.on-read=true

    [{{ $.Release.Name }}-door-svc/webdav]
    webdav.cell.name=webdav-tls
    webdav.net.port=8083
    webdav.authn.protocol=https
    webdav.authz.anonymous-operations=READONLY
    webdav.redirect.on-write=false
    webdav.redirect.on-read=true

    [{{ $.Release.Name }}-door-svc/frontend]
    frontend.authn.protocol=http
    frontend.authz.anonymous-operations=FULL

    [{{ $.Release.Name }}-door-svc/xrootd]
    xrootd.cell.name = xrootd-gsi
    ## REVISIT: do we need to specify 'authz:none' here?
    xrootd.plugins = gplazma:gsi,authz:none
    xrootd.net.port = 1095
    xrootd.authz.write-paths = /
    xrootd.authz.read-paths = /

{{- range .Values.dcache.pools }}
  config-pool-{{ . }}: |-
    dcache.broker.scheme = satellite

    pool.tags=hostname=${host.name}
    pool.mover.xrootd.security.tls.mode=OFF
    dcache.java.options.extra=-Dorg.dcache.net.localaddresses={{ $.Release.Name }}-pool-{{ . }}-svc

    [{{ $.Release.Name }}-pool-{{ . }}-svc]

    [{{ $.Release.Name }}-pool-{{ . }}-svc/pool]
    pool.name=pool-{{ . }}
    pool.path=/pool
    pool.mover.nfs.port.min={{ $.Values.mover.nfs }}
    pool.mover.nfs.port.max={{ $.Values.mover.nfs }}
    pool.mover.xrootd.port.min={{ $.Values.mover.xrootd }}
    pool.mover.xrootd.port.max={{ $.Values.mover.xrootd }}
    pool.mover.http.port.min={{ $.Values.mover.http }}
    pool.mover.http.port.max={{ $.Values.mover.http }}
    pool.mover.https.port.min={{ $.Values.mover.https }}
    pool.mover.https.port.max={{ $.Values.mover.https }}


{{- end }}

  dcache.conf: |-
    dcache.enable.space-reservation = false
    cleaner-disk.destination.remove-notification =

    chimera.db.user=dcache
    chimera.db.password=let-me-in
    chimera.db.host=chimera-postgresql
    chimera.db.name=chimera

    dcache.zookeeper.connection=cells-zookeeper:2181
    dcache.kafka.bootstrap-servers=billing-kafka:9092
    dcache.enable.kafka = true
    dcache.layout=dcache-k8s
    dcache.authn.vomsdir=/mnt
    #webdav.redirect.allow-https=false
    #pool.enable.encrypted-transfers=false
    dcache.authn.hostcert.key=/opt/dcache/etc/certs/hostkey.pem
    dcache.authn.hostcert.cert=/opt/dcache/etc/certs/hostcert.pem

  00-init.sh: |-
    export JAVA=/usr/bin/java
    /opt/dcache/bin/dcache database update
    /opt/dcache/bin/chimera mkdir /testbase || true
    /opt/dcache/bin/chimera chmod 0777 /testbase || true
    /opt/dcache/bin/chimera mkdir /data || true
    /opt/dcache/bin/chimera chmod 0777 /data || true

  export: |-
    /data *(rw,no_root_squash)

  gplazma.conf: |-
    auth    optional    x509
    auth    optional    voms
    auth    sufficient  htpasswd
    map     optional    vorolemap
    map     optional    gridmap
    map     requisite   authzdb
    session requisite   roles
    session requisite   authzdb

  grid-mapfile: |-
    "/C=DE/ST=Hamburg/O=dCache.ORG/CN=Kermit the frog" kermit

  grid-vorolemap: |-
    "*" "/desy" desyuser

  storage-authzdb: |-
    version 2.1

    authorize admin    read-write    0    0 / / /
    authorize desyuser read-write 1000 2000 / / /
    authorize kermit   read-write 1000 1000 / / /
