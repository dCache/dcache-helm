apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-configmap
data:
  dcache-k8s-door: |-
{{ if .Values.dcache.door.enabled }}
    [door-svc]
    dcache.broker.scheme = core
    dcache.java.options.extra=-Dorg.dcache.net.localaddresses={{ $.Release.Name }}-door-svc.{{ $.Release.Namespace }}.svc.cluster.local

    [door-svc/poolmanager]

    [door-svc/pnfsmanager]
    chimera.db.url=jdbc:postgresql://${chimera.db.host}/${chimera.db.name}?ApplicationName=${pnfsmanager.cell.name}

    [door-svc/cleaner-disk]
    chimera.db.url=jdbc:postgresql://${chimera.db.host}/${chimera.db.name}?ApplicationName=${cleaner-disk.cell.name}

    [door-svc/billing]
    [door-svc/httpd]

    [door-svc/gplazma]
    gplazma.oidc.provider!k8s = http://keycloak:8080/realms/dcache-test -suppress=audience
    gplazma.authzdb.file=/opt/dcache/etc/storage-authzdb
    gplazma.htpasswd.file=/opt/dcache/etc/htpasswd

    [door-svc/bulk]

  {{ if .Values.dcache.qos.enabled }}
    [door-svc/qos-engine]
    [door-svc/qos-verifier]
    [door-svc/qos-adjuster]
    [door-svc/qos-scanner]
  {{- end }}

  {{ if .Values.services.frontend.enabled }}
    [door-svc/frontend]
    frontend.cell.name = Frontend
    frontend.authn.protocol=http
    frontend.net.port=3880
    frontend.authz.anonymous-operations=READONLY
    frontend.srr.public=true
  {{- end }}

  {{ if .Values.services.frontends.enabled }}
    [door-svc/frontend]
    frontend.cell.name = Frontend-S
    frontend.authn.protocol=https
    frontend.net.port=3881
    frontend.authz.anonymous-operations=READONLY
    frontend.srr.public=true
  {{- end }}

  {{ if .Values.services.nfs.enabled }}
    [door-svc/nfs]
    chimera.db.url=jdbc:postgresql://${chimera.db.host}/${chimera.db.name}?ApplicationName=${cleaner-disk.cell.name}
    nfs.version=4.1
    nfs.domain=dcache.org
    nfs.enable.portmap=false
    nfs.namespace-cache.size=8192
    nfs.export.file=/opt/dcache/etc/exports
  {{- end}}

{{ if .Values.services.webdav.enabled }}
    [door-svc/webdav]
    webdav.cell.name=webdav-plain
    webdav.net.port=8080
    webdav.authz.anonymous-operations=READONLY
    webdav.redirect.on-write=false
    webdav.redirect.on-read=true
{{- end }}

{{ if .Values.services.webdavs.enabled }}
    [door-svc/webdav]
    webdav.cell.name=webdav-tls
    webdav.net.port=8083
    webdav.authn.protocol=https
    webdav.authz.anonymous-operations=READONLY
    webdav.redirect.on-write=false
    webdav.redirect.on-read=true
{{- end }}

{{ if .Values.services.xrootd.enabled }}
    [door-svc/xrootd]
    xrootd.security.tls.mode=OFF
    xrootd.authz.write-paths = /
    xrootd.authz.anonymous-operations = FULL
{{- end }}

{{ if .Values.services.xrootdg.enabled }}
    [door-svc/xrootd]
    xrootd.cell.name = xrootd-gsi
    ## REVISIT: do we need to specify 'authz:none' here?
    xrootd.plugins = gplazma:gsi,authz:none
    xrootd.net.port = 1095
    xrootd.authz.write-paths = /
    xrootd.authz.read-paths = /
{{- end }}

{{ if .Values.services.dcap.enabled }}
    [door-svc/dcap]
{{- end }}

{{ if .Values.services.dcapg.enabled }}
    [door-svc/dcap]
    dcap.authn.protocol = gsi
{{- end }}

{{ if .Values.services.gridftp.enabled }}
    [door-svc/ftp]
    ftp.authn.protocol = gsi
    ftp.loginbroker.address={{ $.Release.Name }}-door-svc.{{ $.Release.Namespace }}.svc.cluster.local
    ftp.enable.space-reservation=false
{{- end }}


{{- if .Values.services.srm.enabled }}

    [door-svc/transfermanagers]
    transfermanagers.limits.transfer-time = 8200
    transfermanagers.limits.transfer-time.unit=SECONDS

    [door-svc/pinmanager]

    [door-svc/srm]
    srm.loginbroker.address={{ $.Release.Name }}-door-svc.{{ $.Release.Namespace }}.svc.cluster.local
    [door-svc/srmmanager]


    [door-svc/spacemanager]
    spacemanager.authz.link-group-file-name=/opt/dcache/etc/linkgroupauthz.conf
{{- end }}

{{- if .Values.services.sshAdmin.enabled }}
    [door-svc/admin]
    admin.paths.host-keys=/etc/grid-security/ssh_host_rsa_key
{{- end }}
{{ end }}

{{- range .Values.dcache.pools }}

    [pool-{{ . }}-svc]
    pool.tags=hostname=${host.name}
    pool.mover.xrootd.security.tls.mode=OFF
    dcache.java.options.extra=-Dorg.dcache.net.localaddresses={{ $.Release.Name }}-pool-{{ . }}-svc.{{ $.Release.Namespace }}.svc.cluster.local

    [pool-{{ . }}-svc/pool]
    pool.name=pool-{{ . }}
    pool.path=/pool
    pool.mover.nfs.port.min={{ $.Values.mover.nfs }}
    pool.mover.nfs.port.max={{ $.Values.mover.nfs }}
    pool.mover.xrootd.port.min={{ $.Values.mover.xrootd }}
    pool.mover.xrootd.port.max={{ $.Values.mover.xrootd }}
    pool.mover.http.port.min={{ $.Values.mover.http }}
    pool.mover.http.port.max={{ $.Values.mover.http }}
    pool.mover.https.port.min={{ $.Values.mover.https }}
    pool.mover.https.port.max={{ $.Values.mover.https }}


{{- end }}

  dcache.conf: |-
{{- if .Values.services.srm.enabled }}
    dcache.enable.space-reservation = true
    spacemanager.enable.unreserved-uploads-to-linkgroups = true
{{- else }}
    dcache.enable.space-reservation = false
{{- end }}

    cleaner-disk.destination.remove-notification =

    # single db for all services
    dcache.db.host=chimera-postgresql
    dcache.db.user=dcache
    dcache.db.password=let-me-in
    chimera.db.name=chimera
    srmmanager.db.name=chimera
    pinmanager.db.name=chimera
    spacemanager.db.name = chimera
    bulk.db.name = chimera
{{ if .Values.dcache.qos.enabled }}
    qos.db.name = chimera
{{- end }}

    chimerashell.db.host = ${chimera.db.host}
    chimerashell.db.user = ${chimera.db.user}
    chimerashell.db.password = ${chimera.db.password}
    chimerashell.db.name = ${chimera.db.name}

    dcache.zookeeper.connection={{ $.Values.zookeeper.servers }}

{{- if .Values.kafka.enabled}}
    dcache.kafka.bootstrap-servers={{ $.Values.kafka.bootstrap_servers }}
    dcache.enable.kafka = true
{{- end}}
    dcache.layout=dcache-k8s
    dcache.enable.overwrite = true
    #webdav.redirect.allow-https=false
    #pool.enable.encrypted-transfers=false

    dcache.net.wan.port.min={{ $.Values.mover.wan_range_min }}
    dcache.net.wan.port.max={{ $.Values.mover.wan_range_max }}

  00-init.sh: |-
    export JAVA=/usr/bin/java
    /opt/dcache/bin/dcache database update
    /opt/dcache/bin/chimera writetag / OSMTemplate "StoreName test"
    /opt/dcache/bin/chimera writetag / sGroup "default"
    /opt/dcache/bin/chimera mkdir /testbase || true
    /opt/dcache/bin/chimera chmod 0777 /testbase || true
    /opt/dcache/bin/chimera mkdir /data || true
    /opt/dcache/bin/chimera chmod 0777 /data || true
    /opt/dcache/bin/chimera mkdir /data/g2 || true
    /opt/dcache/bin/chimera chown 1000:1000 /data/g2 || true
    /opt/dcache/bin/chimera mkdir /data/s2 || true
    /opt/dcache/bin/chimera chown 1000:1000 /data/s2 || true
  {{- if .Values.dcache.plugins.cta.enabled }}
    /opt/dcache/bin/chimera mkdir /data/cta || true
    /opt/dcache/bin/chimera chown 1000:1000 /data/cta || true
    /opt/dcache/bin/chimera writetag /data/cta sGroup "tape"
    /opt/dcache/bin/chimera writetag /data/cta hsmInstance "cta"
  {{- end }}
  {{- range .Values.dcache.pools }}
    /opt/dcache/bin/chimera mkdir /data/pool-{{.}} || true
    /opt/dcache/bin/chimera chown 1000:1000 /data/pool-{{.}} || true
    /opt/dcache/bin/chimera writetag /data/pool-{{.}} sGroup "pool-{{.}}"
  {{- end }}


  export: |-
    /data *(rw,no_root_squash)

  gplazma.conf: |-
    auth    optional    x509
    auth    optional    voms
    auth    optional    oidc
    auth    sufficient  htpasswd
    map     sufficient  multimap gplazma.multimap.file=/opt/dcache/etc/multimap-id-to-groupname.conf
    map     sufficient  multimap gplazma.multimap.file=/opt/dcache/etc/multimap-id-to-username.conf
    map     requisite   authzdb
    session requisite   roles
    session requisite   authzdb

  multimap-id-to-username: |-
    "dn:/C=DE/ST=Hamburg/O=dCache.ORG/CN=Kermit the frog" username:kermit uid:1000 gid:1000,true

  multimap-id-to-groupname: |-
    fqan:/desy username:desyuser uid:1000 gid:2000,true
    op:k8s username:desyuser uid:1000 gid:2000,true

  storage-authzdb: |-
    version 2.1

    authorize admin    read-write    0    0 / / /
    authorize desyuser read-write 1000 2000 / / /
    authorize kermit   read-write 1000 1000 / / /

  linkgroupauthz: |-
    LinkGroup default-linkgroup
    /desy/Role=*

  htpasswd: |-
    admin:$apr1$nq7.vQxE$tvmghVXGplwv/SNpNYGiC1

{{- if .Values.dcache.hsm.enabled }}
  pool-setup: |-
      queue define class -expire=0 -pending=0 -total=0 -open osm *
      hsm create osm s3 script -command=/usr/bin/s3hsm -debuglog=/dev/null -s3bucket=hsm -s3config=/opt/dcache/etc/s3-tape.yml
  {{- if .Values.dcache.plugins.cta.enabled }}
      queue define class -expire=0 -pending=0 -total=0 -open cta *
      hsm create cta cta dcache-cta -cta-frontend-addr={{ .Values.dcache.plugins.cta.endpoint }} -cta-user={{ .Values.dcache.plugins.cta.user }} -cta-group={{ .Values.dcache.plugins.cta.group }} -cta-instance-name={{ .Values.dcache.plugins.cta.instance }} -io-port={{ .Values.dcache.plugins.cta.ioport }}
  {{- end }}
{{- end }}

  poolmanager.conf: |-
    psu create unit -store *@*
    psu create unit -net 0.0.0.0/0.0.0.0
    psu create unit -net ::/0
    psu create unit -protocol */*

    psu create ugroup any-protocol
    psu addto ugroup any-protocol */*

    psu create ugroup any-store
    psu addto ugroup any-store *@*
    psu create unit -store test:tape@cta

    psu create ugroup world-net
    psu addto ugroup world-net 0.0.0.0/0.0.0.0
    psu addto ugroup world-net ::/0

    psu create pgroup default

    psu create link default-link any-protocol any-store world-net
    psu set link default-link -readpref=10 -writepref=10 -cachepref=10 -p2ppref=-1
    psu addto link default-link default

    psu create link default-outside-linkgroup any-protocol any-store world-net
    psu set link default-outside-linkgroup -readpref=10 -writepref=10 -cachepref=10 -p2ppref=10
    psu addto link default-outside-linkgroup default

    psu create linkGroup default-linkgroup
    psu set linkGroup custodialAllowed default-linkgroup true
    psu set linkGroup replicaAllowed default-linkgroup true
    psu set linkGroup nearlineAllowed default-linkgroup true
    psu set linkGroup outputAllowed default-linkgroup true
    psu set linkGroup onlineAllowed default-linkgroup true
    psu addto linkGroup default-linkgroup default-link

    # named pool, unit, unit group, links. The link's write pref is higher than the write perd of default-link
  {{- range .Values.dcache.pools }}

    psu create pool pool-{{ . }}

    psu create unit -store test:pool-{{ . }}@osm
    psu create ugroup pool-{{ . }}-store
    psu addto ugroup pool-{{ . }}-store test:pool-{{ . }}@osm
    psu addto ugroup pool-{{ . }}-store test:tape@cta

    psu create link pool-{{ . }}-link any-protocol pool-{{ . }}-store world-net
    psu set link pool-{{ . }}-link -readpref=20 -writepref=20 -cachepref=20 -p2ppref=20
    psu addto link pool-{{ . }}-link pool-{{ . }}
  {{- end }}


immutable: true
