{{- range .Values.dcache.pools }} 
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $.Release.Name }}-pool-{{ . }}
spec:
  selector:
    matchLabels:
      app: pool-{{ . }}
  replicas: 1
  serviceName: {{ $.Release.Name }}-pool-{{ . }}-svc
  template:
    metadata:
      labels:
        app: pool-{{ . }}
    spec:
      containers:
      - name: pool
        image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
        imagePullPolicy: {{ $.Values.image.pullPolicy }}
        command: ["/run.sh", "{{ $.Release.Name }}-pool-{{ . }}-svc"]
        env:
          - name: AUTOCA_URL
            value: https://ci.dcache.org/ca
        volumeMounts:
        - name: dcache-config
          mountPath: /opt/dcache/etc/dcache.conf
          subPath: dcache.conf
          readOnly: true
        - name: dcache-layout
          mountPath: /opt/dcache/etc/layouts/dcache-k8s.conf
          subPath: dcache.conf
          readOnly: true
      initContainers:
      - name: wait-for-core
        image: busybox:1.28
        command: ['sh', '-c', "until nc -z -v  {{ $.Release.Name }}-door-svc.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local {{ $.Values.cell.tunnel }}; do echo waiting for core to start; sleep 2; done"]
      volumes:
      - name: dcache-config
        configMap:
          name: {{ $.Release.Name }}-configmap
          items:
          - key: "dcache.conf"
            path: "dcache.conf"
      - name: dcache-layout
        configMap:
          name: {{ $.Release.Name }}-configmap
          items:
          - key: "config-pool-{{ . }}"
            path: "dcache.conf"
---
{{- end }}
